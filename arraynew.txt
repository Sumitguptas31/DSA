Basic Array Manipulations:
Find the largest element in an array.
Find the smallest element in an array.
Reverse an array in place.
Rotate an array to the left by k positions.
Rotate an array to the right by k positions.
Find the second largest and second smallest elements in an array.
Find the frequency of each element in an array.
Remove duplicate elements from an array.
Merge two sorted arrays.
Find the union and intersection of two arrays.


Searching and Sorting
Implement linear search in an array.
Implement binary search in a sorted array.
Find the first and last occurrence of an element in a sorted array.
Count the number of occurrences of an element in a sorted array.
Sort an array using the bubble sort algorithm.
Sort an array using the selection sort algorithm.
Sort an array using the insertion sort algorithm.
Sort an array using quicksort.
Sort an array using mergesort.
Find the k largest and k smallest elements in an array.


Mathematical Operations on Arrays
Find the sum of all elements in an array.
Find the product of all elements in an array.
Find the subarray with the maximum sum (Kadaneâ€™s Algorithm).
Find the subarray with the given sum.
Rearrange the array in alternating positive and negative elements.
Find the equilibrium index of an array.
Check if a given array is a subset of another array.
Find the missing number in an array of size n containing numbers from 1 to n+1.
Find the duplicate element in an array of n+1 integers.
Find the majority element (element appearing more than n/2 times).


Two Pointers and Sliding Window
Find a pair of elements in an array with a given sum.
Find a triplet in an array with a given sum.
Move all zeroes to the end of the array.
Find the smallest subarray with a sum greater than or equal to k.
Find the longest subarray with a sum equal to k.
Count all distinct elements in every window of size k.
Find the maximum of all subarrays of size k.
Find the minimum of all subarrays of size k.
Find the number of subarrays with an odd sum.
Check if there is a subarray with a sum of 0.


Advanced Problems
Implement the Dutch National Flag algorithm to sort an array of 0s, 1s, and 2s.
Find the next permutation of an array.
Find the longest increasing subsequence in an array.
Find the maximum product subarray.
Find the minimum number of swaps required to sort the array.
Find the longest consecutive subsequence in an array.
Find the minimum difference between the maximum and minimum elements after modifying the array.
Implement a program to find the median of two sorted arrays.
Find the peak element in an array.
Count the number of inversions in an array.